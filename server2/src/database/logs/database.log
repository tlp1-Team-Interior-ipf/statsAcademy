Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "userId" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "userId" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "userId" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "userId" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "userId" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "userId" TYPE INTEGER;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "public"."ratings" ADD COLUMN "userId" INTEGER REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): DROP TABLE IF EXISTS "progress" CASCADE;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): CREATE TABLE IF NOT EXISTS "progress" ("id"  SERIAL , "progress" FLOAT NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("id"));
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "public"."progress" ADD COLUMN "userId" INTEGER REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademy'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '9';
Executing (default): DELETE FROM "User" WHERE "id" = 9
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'david@gmail.com';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '8';
Executing (default): DELETE FROM "User" WHERE "id" = 8
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): INSERT INTO "User" ("id","username","email","password","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","username","email","password","profileImage","createdAt","updatedAt";
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'statsacademy40@gmail.com';
Executing (default): INSERT INTO "User" ("id","username","email","password","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","username","email","password","profileImage","createdAt","updatedAt";
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'statsacademy40@gmail.com';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "topics"."id", "topics"."name", "topics"."status", "topics"."unitsId", "units"."id" AS "units.id", "units"."name" AS "units.name" FROM "topics" AS "topics" LEFT OUTER JOIN "units" AS "units" ON "topics"."unitsId" = "units"."id" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = 'undefined';
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = 'undefined';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '[object Object]';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","createdAt","updatedAt") VALUES ($1,$2,$3) ON CONFLICT ("id") DO UPDATE SET "progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","createdAt","updatedAt") VALUES ($1,$2,$3) ON CONFLICT ("id") DO UPDATE SET "progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '7' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '4' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","createdAt","updatedAt") VALUES ($1,$2,$3) ON CONFLICT ("id") DO UPDATE SET "progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '2' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '4' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '4' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '4' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'statsacademy40@gmail.com';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 9 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'livadavid78@gmail.com';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): UPDATE "topics" SET "status"=$1 WHERE "id" = $2
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics";
Executing (default): SELECT count(*) AS "count" FROM "topics" AS "topics" WHERE "topics"."status" = 'dictated';
Executing (default): INSERT INTO "progress" ("progress","userId","createdAt","updatedAt") VALUES ($1,$2,$3,$4) ON CONFLICT ("id") DO UPDATE SET "userId"=EXCLUDED."userId","progress"=EXCLUDED."progress","updatedAt"=EXCLUDED."updatedAt" RETURNING "id","progress","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "ratings" ("id","note","createdAt","updatedAt","topicId","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","note","createdAt","updatedAt","topicId","userId";
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = 8 ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "name", "description", "status", "unitsId" FROM "topics" AS "topics" WHERE "topics"."status" = 'not dictated' ORDER BY "topics"."id" ASC LIMIT 1;
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): INSERT INTO "Chats" ("id","message","sender","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","message","sender","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '8' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '8';
Executing (default): INSERT INTO "tasks" ("id","title","description","status","date","userId","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7) RETURNING "id","title","description","status","date","userId","createdAt","updatedAt";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."id" = '1';
Executing (default): UPDATE "tasks" SET "status"=$1,"updatedAt"=$2 WHERE "id" = $3
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."id" = '1';
Executing (default): UPDATE "tasks" SET "status"=$1,"updatedAt"=$2 WHERE "id" = $3
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '8' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "name" FROM "topics" AS "topics" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "topics"."id", "topics"."name", "topics"."status", "topics"."unitsId", "units"."id" AS "units.id", "units"."name" AS "units.name" FROM "topics" AS "topics" LEFT OUTER JOIN "units" AS "units" ON "topics"."unitsId" = "units"."id" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "topics"."id", "topics"."name", "topics"."status", "topics"."unitsId", "units"."id" AS "units.id", "units"."name" AS "units.name" FROM "topics" AS "topics" LEFT OUTER JOIN "units" AS "units" ON "topics"."unitsId" = "units"."id" ORDER BY "topics"."id" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '8';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."email" = 'statsacademy40@gmail.com';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '9';
Executing (default): INSERT INTO "Event" ("id","event","date","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","event","date","createdAt","updatedAt","userId";
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."id" = '1';
Executing (default): DELETE FROM "Event" WHERE "id" = 1
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '9';
Executing (default): INSERT INTO "tasks" ("id","title","description","status","date","userId","createdAt","updatedAt") VALUES (DEFAULT,$1,$2,$3,$4,$5,$6,$7) RETURNING "id","title","description","status","date","userId","createdAt","updatedAt";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."id" = '2';
Executing (default): UPDATE "tasks" SET "description"=$1,"updatedAt"=$2 WHERE "id" = $3
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."id" = '2';
Executing (default): UPDATE "tasks" SET "status"=$1,"updatedAt"=$2 WHERE "id" = $3
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."id" = '2';
Executing (default): UPDATE "tasks" SET "status"=$1,"updatedAt"=$2 WHERE "id" = $3
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "username", "email", "password", "profileImage", "createdAt", "updatedAt" FROM "User" AS "User" WHERE "User"."id" = '9';
Executing (default): INSERT INTO "Event" ("id","event","date","createdAt","updatedAt","userId") VALUES (DEFAULT,$1,$2,$3,$4,$5) RETURNING "id","event","date","createdAt","updatedAt","userId";
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "message", "sender", "createdAt", "updatedAt", "userId" FROM "Chats" AS "Chat" WHERE "Chat"."userId" = '9' ORDER BY "Chat"."createdAt" ASC;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "event", "date", "createdAt", "updatedAt", "userId" FROM "Event" AS "Event" WHERE "Event"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "title", "description", "status", "date", "userId", "createdAt", "updatedAt" FROM "tasks" AS "tasks" WHERE "tasks"."userId" = '9';
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT "ratings"."id", "ratings"."note", "ratings"."createdAt", "ratings"."updatedAt", "ratings"."topicId", "ratings"."userId", "topics"."id" AS "topics.id", "topics"."name" AS "topics.name" FROM "ratings" AS "ratings" LEFT OUTER JOIN "topics" AS "topics" ON "ratings"."topicId" = "topics"."id" WHERE "ratings"."userId" = '9';
Executing (default): SELECT "id", "progress", "createdAt", "updatedAt", "userId" FROM "progress" AS "Progress" WHERE "Progress"."userId" = '9' ORDER BY "Progress"."createdAt" DESC LIMIT 1;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'User'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'User' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'User' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "User" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("username");ALTER TABLE "User" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "User"  ADD UNIQUE ("email");ALTER TABLE "User" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "User" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "User" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "User" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "User" ALTER COLUMN "profileImage" DROP NOT NULL;ALTER TABLE "User" ALTER COLUMN "profileImage" DROP DEFAULT;ALTER TABLE "User" ALTER COLUMN "profileImage" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'User' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Chats'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Chats' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Chats' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Chats" DROP CONSTRAINT "Chats_userId_fkey"
Executing (default): ALTER TABLE "Chats"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "Chats" ALTER COLUMN "sender" SET NOT NULL;ALTER TABLE "Chats" ALTER COLUMN "sender" DROP DEFAULT;ALTER TABLE "Chats" ALTER COLUMN "sender" TYPE VARCHAR(255);
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Chats' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'initialAssessment'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'initialAssessment' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'initialAssessment' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "level" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "level" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "level" TYPE INTEGER;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "initialAssessment" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "initialAssessment" DROP CONSTRAINT "initialAssessment_userId_fkey"
Executing (default): ALTER TABLE "initialAssessment"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'initialAssessment' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'questions'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'questions' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'questions' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "questions" ALTER COLUMN "question" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "question" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "question" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "questions" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "questions" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "questions" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "questions" DROP CONSTRAINT "questions_initialAssessmentId_fkey"
Executing (default): ALTER TABLE "questions"  ADD FOREIGN KEY ("initialAssessmentId") REFERENCES "initialAssessment" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'questions' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'answers'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'answers' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'answers' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "answers" ALTER COLUMN "respuesta" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "respuesta" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "respuesta" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "answers" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "answers" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "answers" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "answers" DROP CONSTRAINT "answers_questionId_fkey"
Executing (default): ALTER TABLE "answers"  ADD FOREIGN KEY ("questionId") REFERENCES "questions" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'answers' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'program'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'program' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'program' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "program" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "program" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "program" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "program" ALTER COLUMN "description" TYPE TEXT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'program' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'units'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'units' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'units' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "units" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "units" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "units" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "units" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "units" DROP CONSTRAINT "units_programId_fkey"
Executing (default): ALTER TABLE "units"  ADD FOREIGN KEY ("programId") REFERENCES "program" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'units' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'topics'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_topics_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'topics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'topics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "topics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "topics" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "topics" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "topics" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "topics" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "topics" ALTER COLUMN "status" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_topics_status" AS ENUM(''dictated'', ''not dictated''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "topics" ALTER COLUMN "status" TYPE "public"."enum_topics_status" USING ("status"::"public"."enum_topics_status");
Executing (default): ALTER TABLE "topics" DROP CONSTRAINT "topics_unitsId_fkey"
Executing (default): ALTER TABLE "topics"  ADD FOREIGN KEY ("unitsId") REFERENCES "units" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'topics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'subtopics'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'subtopics' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'subtopics' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "name" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "name" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "subtopics" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "subtopics" DROP CONSTRAINT "subtopics_topicId_fkey"
Executing (default): ALTER TABLE "subtopics"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'subtopics' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'ratings'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'ratings' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'ratings' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "note" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "note" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "note" TYPE INTEGER;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "ratings" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_topicId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("topicId") REFERENCES "topics" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "ratings" DROP CONSTRAINT "ratings_userId_fkey"
Executing (default): ALTER TABLE "ratings"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'ratings' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'progress'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'progress' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'progress' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "progress" ALTER COLUMN "progress" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "progress" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "progress" TYPE FLOAT;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "progress" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "progress" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "progress" DROP CONSTRAINT "progress_userId_fkey"
Executing (default): ALTER TABLE "progress"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'progress' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Event'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Event' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Event' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "Event" ALTER COLUMN "event" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "event" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "event" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Event" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Event" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Event" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Event" DROP CONSTRAINT "Event_userId_fkey"
Executing (default): ALTER TABLE "Event"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Event' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'tasks'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_tasks_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'tasks' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'tasks' AND tc.table_catalog = 'statsAcademyFinal'
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "description" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "description" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "status" DROP NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "status" SET DEFAULT 'pending';DO 'BEGIN CREATE TYPE "public"."enum_tasks_status" AS ENUM(''pending'', ''in progress'', ''completed''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "tasks" ALTER COLUMN "status" TYPE "public"."enum_tasks_status" USING ("status"::"public"."enum_tasks_status");
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "tasks" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "tasks" DROP CONSTRAINT "tasks_userId_fkey"
Executing (default): ALTER TABLE "tasks"  ADD FOREIGN KEY ("userId") REFERENCES "User" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tasks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
